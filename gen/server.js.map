{"version":3,"sources":["../src/server.ts"],"names":[],"mappings":"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","file":"server.js","sourcesContent":["/**\n * A simple webserver serving the interface\n *\n */\n\n // args\n // .parallel\n // .simul\n // .qps_avg\n // .fakemonitor\n // .INTERNAL\n // .data\n\n\n //var http = require('http');\n import * as http from 'http';\n //import { Server } from 'http';\n import { Server } from 'net';\n import { Connector } from '../gen/dbconnector';\n\n import * as express from 'express';\n //var express = require('express');\n var session = require('express-session');\n var bodyParser = require('body-parser');\n var cookieParser = require('cookie-parser');\n var uuid = require('node-uuid');\n var debug = require('debug');\n var debuglog = debug('server');\n var compression = require('compression');\n\n\nexport class WCServer {\n\n  app : express.Application = undefined;\n  server : Server;\n  connector : Connector;\n\n  GetApp() : express.Application {\n    return this.app;\n  }\n  GetServer() : any {\n    return this.server;\n  }\n  GetConnector() : any {\n    return this.connector;\n  }\n\n  constructor(cfgdata, args) {\n    console.log(JSON.stringify(args));\n    this.app = express();\n    var app = this.app;\n  // conf = require('./config.json');\n\n\n    app.locals.pretty = true;\n    app.set('port', (cfgdata && cfgdata.port) || 42042);\n    app.set('views', __dirname + '/../app/server/views');\n    app.set('view engine', 'jade');\n    app.use(cookieParser());\n    app.use(compression());\n    app.use(bodyParser.json());\n    app.use(bodyParser.urlencoded({ extended: true }));\n    //app.use(require('stylus').middleware({ src: __dirname + '/app/public' }));\n\n    app.get('*',function(req,res,next){\n      /* redirect required for heroku to redirect http to https\n      if((req.headers['x-forwarded-proto'] !='https') && process.env.PORT)\n        res.redirect(process.env.XXX_SERVER + req.url);\n      else */\n        next(); /* Continue to other routes if we're not redirecting */\n    });\n\n    var oneDay = 86400000; // in milliseconds\n    app.use(express.static(__dirname + '/../app/public',{\n      maxAge: oneDay\n    }));\n\n    var l_session = session({\n      secret: 'faeb4453e5d14fe6f6d04637f78077c76c73d1b4',\n      proxy: true,\n      resave: true,\n      saveUninitialized: true\n    });\n\n    // remember to create sessions table in DB!\n      //https://www.npmjs.com/package/connect-pg-simple\n\n    app.use(l_session);\n\n    require('../app/server/routes')(app);\n\n    this.server = http.createServer(app);\n    var that = this;\n\n    if(!args.INTERNAL)\n    {\n        that.server.listen(app.get('port'), function(){\n        console.log('Express server listening on port ' + app.get('port'));\n      });\n    }\n\n    var io = require('socket.io');\n    io = io.listen(this.server);\n\n    //io.use(ios(l_session));\n    var sharedsession = require('express-socket.io-session');\n\n    io.use(sharedsession(l_session, {\n      autoSave:true\n    }));\n\n    //https://github.com/xpepermint/socket.io-express-session\n\n    app.use(express.static(__dirname + '/public'));\n\n    //server.listen(process.env.PORT || 42042);\n\n    var Monitor = require('./monitor.js');\n    var that = this;\n    // heroku requires the socket to be taken within 60 seconds,\n    // so we start the server early even if the intenral initialization blocks\n    // it\n\n    //setTimeout(\n    (function() {\n      var config = undefined;\n      var htmlconnector;\n      if(args.simul) {\n        htmlconnector = require('./connector.js');\n        that.connector = new htmlconnector.Connector();\n      } else {\n        if(cfgdata) {\n          var path = require('path');\n          var jinst = require('jdbc/lib/jinst');\n\n          if (!jinst.isJvmCreated()) {\n            console.log('adding drivers from ' + cfgdata.classpath);\n            jinst.addOption('-Xrs');\n            jinst.setupClasspath(cfgdata.classpath);\n          }\n\n          var Pool = require('jdbc');\n          console.log(' here pool config ' + JSON.stringify(cfgdata));\n          config = cfgdata.config;\n          var testpool = new Pool(config);\n          testpool.initialize(function() {});\n        }\n        var Pool = require('jdbc');\n\n        htmlconnector = require('./dbconnector.js');\n        console.log('config setup is ' + JSON.stringify(config));\n        htmlconnector.Setup(args.parallel, cfgdata);\n        that.connector = new htmlconnector.Connector( { qps_avg : args.qps_avg });\n        if(args.data > 0) {\n          that.connector.getParallelExecutor().startSequentialSimple('CREATE TABLE IF NOT EXISTS T2 (id  bigint, NAME varchar(200), \"VALUE\" int, NR int);').catch(err => console.log(err));\n          //connector.getParallelExecutor().startSequentialSimple('INSERT INTO SYSTABNOW VALUES( CREATE TABLE SYSTABMON( NAME : string, VALUE: int, NR : int) IF NOT EXIST;').catch(err => console.log(err));\n          //connector.getParallelExecutor().startSequentialSimple('DELETE FROM T2;').catch(err => console.log(err));\n          for(var k = 0; k < args.data; ++k)\n          { var i = (k + Date.now()) % 100000000;\n            that.connector.getParallelExecutor().startSequentialSimple(`INSERT INTO T2( id, NAME, NR, \"VALUE\") values (${i}, '${'NAME' + i}',${i % 1000}, ${2 * i});`).catch(err => console.log(err));\n          }\n        }\n\n        if(!args.fakemonitor) {\n          //\n        } else {\n          Monitor.MONITOR_SYSTABLE_NAME = 'SYSTABMON';\n          that.connector.getParallelExecutor().startSequentialSimple('CREATE TABLE IF NOT EXISTS SYSTABMON( NAME varchar(200), \"VALUE\" int, NR int);').catch(err => console.log(err));\n          //connector.getParallelExecutor().startSequentialSimple('INSERT INTO SYSTABNOW VALUES( CREATE TABLE SYSTABMON( NAME : string, VALUE: int, NR : int) IF NOT EXIST;').catch(err => console.log(err));\n          that.connector.getParallelExecutor().startSequentialSimple('DELETE FROM SYSTABMON;').catch(err => console.log(err));\n          var values = [\n            /*\n            MAX_MEM_USAGE_30s : number = 0;\n            MEM_USAGE : number = 0;\n            AGGR_PLAN_EXEC_DURATION : number = 0;\n            QUERY_PER_MIN : number = 0;\n            CPU_UTILIZATION : number = 0;\n            MEM_UTILIZATION : number = 0;\n            MAX_MEM_EVER : number = 0;\n            NR_PARALLEL_PLAN : number = 0;\n            PLAN_EXEC_DURATION : number = 0;*/\n            { NAME : 'MAX_MEM_USAGE_30s' , NR : 3000, VALUE :  2804},\n            { NAME : 'MEM_USAGE' , NR : 3000, VALUE : 2384},\n            { NAME : 'AGGR_PLAN_EXEC_DURATION' , NR : 3000, VALUE : 70},\n            { NAME : 'QUERY_PER_MIN' , NR : 3000, VALUE : 33},\n            { NAME : 'CPU_UTILIZATION' , NR : 3000, VALUE : 80},\n            { NAME : 'MEM_UTILIZATION' , NR : 3000, VALUE : 40},\n            { NAME : 'MAX_MEM_EVER' , NR : 3000, VALUE :  4884},\n            { NAME : 'NR_PARALLEL_PLAN' , NR : 3000, VALUE : 17},\n            { NAME : 'PLAN_EXEC_DURATION' , NR : 3000, VALUE : 333},\n          ];\n          values.forEach( rec => {\n            that.connector.getParallelExecutor().startSequentialSimple(`INSERT INTO SYSTABMON( NAME, NR, \"VALUE\") values ('${rec.NAME}',${rec.NR}, ${rec.VALUE});`).catch(err => console.log(err));\n          });\n        }\n      }\n\n      io.sockets.on('connection', function (socket) {\n        var id = uuid.v4().toString(); // '' + Date.now();\n        socket.id = id; //uuid.v4();// id;\n\n        var user = socket.handshake.session &&\n        socket.handshake.session.user &&\n        socket.handshake.session.user &&\n        socket.handshake.session.user.user;\n        if (!user) {\n          user = 'ano:' + uuid.v4();\n        }\n        debuglog('Client connected for user ' + user + ' ' + Object.keys(io.clients).join(' '));\n        socket.on('error', (err) => {\n          console.log(err);\n        });\n        socket.on('reconnect_failed', (err) => {\n          console.log(err);\n        });\n        debuglog('associate answerhook '+ id);\n        that.connector.setAnswerHook(function (sId, msg) {\n          debuglog('sending answer for ' + id + ' to ' + sId + ' > ' + JSON.stringify(msg));\n          socket.emit('sqlclient',{ time : new Date(),\n            sourcedest : msg.sourcedest,\n            body : msg.body,\n            id : id\n          });\n        }, id);\n\n        socket.on('disconnect', () => {\n          console.log('DISCONNECT!!!!!' + id);\n          that.connector.disconnect(id);\n          debuglog('Client disconnected' + id);  });\n        socket.emit('sqlclient', { time : new Date(), sourcedest : 'DIALOG', body: 'Indicate your query or wish:' });\n        debuglog('got a message from ' + user + ' ' + id  );\n        socket.on('sqlclient', function (data) {\n          //var user = getUser(socket.handshake.session)\n          debuglog('request has conversationID? '  + (data && data.conversation) );\n          var conversationID = data.conversationID || id;\n          debuglog('re associate answerhook ' + conversationID);\n          that.connector.setAnswerHook(function (sId, sBody) {\n            console.log('sending answer for ' + sId + ' to ' + conversationID + ' > ' +  JSON.stringify(sBody));\n            socket.emit('sqlclient',\n              { time : new Date(),\n                name : 'unknown' ,\n                command : 'nocommand',\n                sourcedest : sBody.sourcedest,\n                body : sBody.body,\n                id : conversationID\n              });\n          }, conversationID);\n          console.log('user' + user + ' conv: ' + conversationID + ' asks '  + JSON.stringify(data.body));\n          that.connector.processMessage({ conversationID : conversationID,\n            user : user,\n            body : data.body });\n        });\n      });\n    })();\n  }\n}\n\n"],"sourceRoot":"."}