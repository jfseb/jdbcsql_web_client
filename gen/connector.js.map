{"version":3,"sources":["../src/connector.ts"],"names":[],"mappings":"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","file":"connector.js","sourcesContent":["/**\n * A Connector exposes the interface toward the webserver\n * to manage multiple conversations\n */\n'use strict';\n\n\nexport interface IStatRecord {\n  time : number,\n  QPS : number,\n  FAIL : number,\n  MEM: number,\n  CPU : number,\n  DUR : number,\n  NP : number,\n  PAR : number,\n MAXMEM : number\n};\n\nvar MAXMEM = 10;\nvar CPU = 200;\nvar MEM = 1;\nvar FAIL = 0;\nvar QPS = 0;\nvar DUR = 0;\nvar time = 100;\n\n\nfunction genRec( )\n{\n time += 2;\n MAXMEM += 10;\n QPS = (MAXMEM % 100 - 50)* Math.sin(time / 1000);\n MEM = 100 * Math.abs(Math.sin(time/30));\n CPU = 100 * Math.abs(Math.cos(time/29));\n DUR = 100 * Math.abs(Math.cos(time/15));\n FAIL = 25 * Math.abs(Math.cos(time/25));\n var rec = {\n   time : time,\n   QPS : QPS,\n   FAIL : FAIL,\n   MEM: MEM,\n   CPU : CPU,\n   DUR : DUR,\n   NP : 0,\n   PAR : 0,\n  MAXMEM : MAXMEM\n };\n return rec;\n}\n\nexport interface IMessage {\n  conversationID : string,\n  sourcedest?: string,  // key for source/destination\n  user : string,\n  body: any\n};\n\n/* nonglobal process:true*/\n//var BotBuilder = require('botbuilder');\n//var Message = BotBuilder.Message;\nexport class Connector {\n  answerHook : any = {};\n  answerHooks : any = {};\n  conversationID : string = \"\";\n  quitHook : any = undefined;\n\n constructor(options: any) {\n    //this.replyCnt = 0;\n    this.answerHooks = {};\n    //this.user = options && options.user || 'user1';\n    //this.bot = options && options.bot || 'fdevstart';\n    this.conversationID = options && options.conversationID || ('' + Date.now());\n  };\n  setAnswerHook(answerHook, id)  : void {\n    console.log('register answerhook for ' + id);\n    if (id) {\n      this.answerHooks[id] = answerHook;\n    }\n    this.answerHook = answerHook;\n  };\n  setQuitHook(quitHook) {\n    this.quitHook = quitHook;\n  };\n\n  /*\n    this.processMessage(line);\n    return this;\n  };\n\n  id is a tuple  { conversationId, user }\n  */\n  processMessageX = function (line : string, id : any) {\n    if (typeof id === 'string') {\n      id = {\n        conversationID: id,\n        user : id,\n      };\n    }\n    console.log('received' + line + ' ' + id);\n    if (this.handler) {\n      this.handler( { id : id, text : line });\n    }\n    return this;\n  };\n\n  intervals : any = {};\n\n  disconnect(conversationID : string) {\n    var that = this;\n    if(that.intervals[conversationID]) {\n      clearInterval(that.intervals[conversationID]);\n      delete that.intervals[conversationID];\n      return; //running!\n    }\n  }\n\n  startParallel(conversationID : string, user : string, statement: string, settings: any)\n  {\n    var that = this;\n    return setInterval( () => {\n      var rec = genRec();\n      rec.NP = settings.parallel;\n      rec.PAR = rec.NP /2;\n      var response2 : IMessage =\n      {\n        conversationID : conversationID ,\n        user : user,\n        sourcedest : \"CHART\",\n        body : { record : rec,\n                rc : true }\n      };\n      that.send([response2]);\n    }, 4000 / settings.parallel);\n  }\n\n\n  processMessage(msg : IMessage) {\n    var that = this;\n    var t = Date.now();\n    console.log('got message' + JSON.stringify(msg));\n    if(msg.body.sourcedest == \"EXEC\") {\n      console.log(' run statement once' + msg.body.statement );\n      var response : IMessage=\n      { conversationID : msg.conversationID ,\n        user : msg.user,\n        sourcedest : msg.sourcedest || \"DIALOG\",\n        body : 'here some answer'\n      };\n      console.log(JSON.stringify(response,undefined,2));\n      that.send([response]);\n      return;\n    }\n    if(msg && msg.body.sourcedest == \"PAR\" && msg.body && msg.body.settings ) {\n      if(msg.body.op == \"START\")\n      {\n        console.log(' Start parallel statement' + msg.body.statement );\n        if(that.intervals[msg.conversationID]) {\n          return; //running!\n        }\n        console.log('registering interval under ' + msg.conversationID);\n        that.intervals[msg.conversationID] = this.startParallel(\n          msg.conversationID,\n          msg.user,\n          msg.body.statement,\n          msg.body.settings);\n          /*setInterval( () => {\n            var rec = genRec();\n            rec.NP = msg.body.settings.parallel;\n            rec.PAR = rec.NP /2;\n            var response2 : IMessage =\n            {\n              conversationID : msg.conversationID ,\n              user : msg.user,\n              sourcedest : \"CHART\",\n              body : rec\n            };\n            that.send([response2]);\n          }, 4000 / msg.body.settings.parallel); */\n      }\n      else if (msg.body.op == \"STOP\") {\n        console.log('stop interval under ' + msg.conversationID);\n        if(that.intervals[msg.conversationID]) {\n          clearInterval(that.intervals[msg.conversationID]);\n          delete that.intervals[msg.conversationID];\n          return; //running!\n        }\n      }\n      else if (msg.body.op == \"CHANGE\") {\n        if(that.intervals[msg.conversationID]) {\n          clearInterval(that.intervals[msg.conversationID]);\n          delete that.intervals[msg.conversationID];\n          that.intervals[msg.conversationID] = this.startParallel(\n            msg.conversationID,\n            msg.user,\n            msg.body.statement,\n            msg.body.settings);\n          return; //running!\n        }\n      }\n    }\n  }\n\n  onEvent = function (handler) {\n    this.handler = handler;\n  };\n\n// array of messages  wiht msg.addres.conversation id\n// {msg.text}\n// {msg.conversationID }\n\n  send(messages : IMessage[], done? : any) {\n    for (var i = 0; i < messages.length; i++) {\n      var msg = messages[i];\n      if (msg.body) {\n        if (msg.conversationID && this.answerHooks[msg.conversationID] )\n        {\n          this.answerHooks[msg.conversationID](msg.conversationID, msg);\n        } else {\n          console.log('where is the answerhook for ' + msg.conversationID);\n          this.answerHook(this.conversationID, msg);\n        }\n        //log(msg.text);\n      }\n      /*\n      if (msg.attachments && msg.attachments.length > 0) {\n        for (var k = 0; i < msg.attachments.length; i++) {\n          if (k > 0) {\n            //console.log();\n          }\n          //renderAttachment(msg.attachments[k]);\n        }\n      }*/\n    }\n    if(done)  {\n      done(null);\n    }\n  };\n  startConversation = function (address, cb) {\n    var adr = Object.assign({}, address); // utils.clone(address)\n    adr.conversation = { id: 'Convo1' };\n    cb(null, adr);\n  };\n}\n"],"sourceRoot":"."}